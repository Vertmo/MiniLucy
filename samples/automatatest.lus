node auto_simpl() returns (x : int);
let
  automaton
  | INC ->
    let u : int = 1 in
    x = 0 fby x + u;
    until x > 5 then DEC;
  | DEC ->
    let u : int = 2 in
    x = 0 fby x - u;
    until x < -10 then INC;
  end;
tel;
  
node auto_mult() returns (x : int; y : int);
let
  automaton
  | A ->
    automaton
    | A1 ->
      x = 0 fby x + 1;
      until x > 3 then A2;
    | A2 ->
      x = 0 fby x + 2;
      until x > 7 then A1;
    end;
    y = 0 fby y + 1;
    until y > 10 then B;
  | B ->
    x = 0 fby x - 5;
    y = 0 fby y - 1;
    until y < -3 then A;
  end;
tel;
  
node cumulative_sum(x : int) returns (y : int);
let
  y = x + 0 fby y;
tel;

node auto_app() returns (x : int);
let
  automaton
  | APP1 ->
    x = 0 fby cumulative_sum(1);
    until x > 4 then APP2;
  | APP2 ->
    x = cumulative_sum(-2);
    until x < -6 then APP1;
  end;
tel;

