node rising_edge(e : bool) returns (rising : bool);
let
  rising = e and (not (true fby e));
tel;

node main(StSt : bool; Rst : bool) returns (disp_1 : int; disp_2 : int);
var s : int; m : int; run : bool;
let
  automaton
  | CHRONO ->
    automaton
    | STOP ->
      unless rising_edge(StSt) continue STOP;
      s = 0 fby s;
      m = 0 fby m;
      run = false;
    | START ->
      unless rising_edge(StSt) continue STOP;
      let (d : int) = ((0 fby d) + 1) mod 100 in
        s = if (d < (0 fby d)) 
            then (((0 fby s) + 1) mod 60)
            else (0 fby s);
        m = if (s < (0 fby s))
            then (((0 fby m) + 1) mod 60)
            else (0 fby m);
        run = true;
      end;
    end;
  end;
  automaton
  | TIME ->
    disp_1 = s;
    disp_2 = m;
    until rising_edge(Rst) and run then LAP;
  | LAP ->
    disp_1 = s fby disp_1;
    disp_2 = m fby disp_2;
    until rising_edge(Rst) then TIME;
  end;
tel;
