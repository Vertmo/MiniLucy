node rising_edge(e : bool) returns (rising : bool);
let
  rising = e and (not (true fby e));
tel;

node main(StSt : bool; Rst : bool) returns (disp_1 : int; disp_2 : int);
var s : int; m : int; run : bool;
let
  automaton
  | CHRONO ->
    automaton
    | STOP ->
      s = pre s;
      m = pre m;
      run = false;
      until rising_edge(StSt) then START and reset;
    | START ->
      let d : int = (pre d + 1) mod 100 in
      s = if (d < (pre d)) 
          then (((pre s) + 1) mod 60)
          else pre s;
      m = if (s < (pre s))
          then (((pre m) + 1) mod 60)
          else pre m;
      run = true;
      until rising_edge(StSt) then STOP and reset;
    end;
  end;
  automaton
  | TIME ->
    disp_1 = s;
    disp_2 = m;
    until rising_edge(Rst) and run then LAP and reset;
  | LAP ->
    disp_1 = s -> (pre disp_1);
    disp_2 = m -> (pre disp_2);
    until rising_edge(Rst) then TIME and reset;
  end;
tel;