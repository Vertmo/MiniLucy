node test_fby() returns (z : int);
let
  z = 1 fby 1 + z;
tel;
  
node test_tuple() returns (i:int; b:bool; r:real);
let
  (r, b, i) = (1.0, true fby false, 0 fby 42);
tel;
  
node test_when(b : bool) returns (d:int when True(b));
let
  d = 1 when True(b);
tel;
  
node test_merge(b : bool; c : int) returns (e:int);
let
  e = merge b (True -> c when True(b)) 
              (False -> c when False(b));
tel;
  
node test_every(b : bool) returns (e : int);
let
  e = test_fby() every b;
tel;
  
node test_app() returns (i : int);
var r:real; b:bool;
let
  (i, b, r) = test_tuple();
tel;
